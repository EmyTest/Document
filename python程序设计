eval(str)函数很强大，官方解释为：将字符串str当成有效的表达式来求值并返回计算结果。所以，结合math当成一个计算器很好用。

eval()函数常见作用有： 
1、计算字符串中有效的表达式，并返回结果


2、将字符串转成相应的对象（如list、tuple、dict和string之间的转换）
>>> a = "[[1,2], [3,4], [5,6], [7,8], [9,0]]"
>>> b = eval(a)
>>> b
[[1, 2], [3, 4], [5, 6], [7, 8], [9, 0]]
>>> a = "{1:'xx',2:'yy'}"
>>> c = eval(a)
>>> c
{1: 'xx', 2: 'yy'}
>>> a = "(1,2,3,4)"
>>> d = eval(a)
>>> d
(1, 2, 3, 4)


3、将利用反引号转换的字符串再反转回对象
>>> list1 = [1,2,3,4,5]
>>> `list1`
'[1, 2, 3, 4, 5]'
>>> type(`list1`)
<type 'str'>
>>> type(eval(`list1`))
<type 'list'>
>>> a = eval(`list1`)
>>> a
[1, 2, 3, 4, 5]



'''利用字典 比较大小  求其中较大的两个数的平均值：'''

score = []
score.append(eval(input("enter first score: ")))
score.append(eval(input("enter second score: ")))
score.append(eval(input("enter third score: ")))
score.remove(min(score))
average = sum(score)/2
print("average of the two higest scores is {0:.2f}".format(average))




'''
军用时间转换为普通时间
'''

militaryTime = input("enter a militaryTime (0000 to 2359):")
hours = int(militaryTime[0:2])
minutes = int(militaryTime[2:4])
if hours > 12:
    cycle = "pm"
    hours %= 12
else:
    cycle = "am"
    if hours == 0:
        hours = 12
print("the regular time is {0}:{1}{2}".format(hours,minutes,cycle))





python文件路径读取
https://blog.csdn.net/databatman/article/details/49453953






# lakes = ["eric","huron","michigan","ontario","superior"]
# result = ""
# for i in range(len(lakes)):
#     result += lakes[i]
#     if i < len(lakes) - 1:
#         result += ","
# print(result)
#
# lakes = ["eric","huron","michigan","ontario","superior"]
# for result in lakes:
#     print(result)

# 
# lakes = ["eric","huron","michigan","ontario","superior"]
# print(",".join(lakes))




计算句子中的元音字母：
# 
phrase = input("enter the prase: ")
num = 0
for i in phrase:
    if i in["i","e","a","o","u"]:
        num+=1
    print(num)


# total = 0
# phrase = input(" enter a phrase: ")
# phrase.lower()
# for ch in phrase:
#     if ch in "aeiou":
#         total+=1
# print( "count is: ",total)


出错点： 
1、没有大小写处理
2、循环遍历的时候不能用字典表示
3、print的缩进！！！！！！



计算：1+1/2+1/3+1/4+...+1/100的值：
sum = 0
for i in range(1,101):
    sum += 1/i
print("sum = {0:.5f} to five.....".format(sum))






python判断字母是否按字典序列排序


 word = input("enter a word: ")
# firstletetr = ""
# secondletter = ""
# flag = True
# for i in range(0,len(word)-1):
#     firstletetr = word[i]
#     print("diyi",firstletetr)
#     secondletter = word[i+1]
#     print("dier",secondletter)
#     if firstletetr >secondletter:
#         flag = False
#         break
# if flag:
#     print("in order")
# else:
#     print("not in order")


知识点：
1、字符串之间的比较
2.字符串的循环遍历
3.flag判断

print('a'>'b')
print('a'<'b')



单复利：p116 T60
r = 0.05
salary = int(input("salary: "))
print("simple interest  ","compound interest")
for year in range(1,5):
    earn = salary*r*year
    money = salary+earn
    mon = salary*(1+0.05)**year
    print("{0}.${1} \t\t\t\t{2}".format(year,money,mon))
    
    
    
    
    
    求中位数：
    
datas = []
count = int(input("enter the count you want calculate: "))
for i in range (count):
    data = int(input("enter a number: "))
    datas.append(data)
datas.sort()
L=len(datas)
m=L//2
if L%2 == 0:
    media =(datas[m]+datas[m-1])/2
else:
    media =datas[m]
print(media)





####P118 T75：
    一个由r个人组成的小组，至少两个人生日相同的概率为：1-（n/n * n-1/n *...(n-(r-1）)/n  其中n是天数。计算r从21到25 的概率

for r in range(21,26):
    product = 1
    for t in range(1,r):
        product=product*((365-t)/365)
    print("{0}   {1:.3f}".format(r,1-product))
    
    
    
    
    
    
    
##########python  将文件的单词按照字母表的顺序输出

p53：
    文本文件
    infile = open("data.txt",'r')
    listName = [line.rstrip() for line in infile]
    infile.close()
    
    
    
#p118 t76    
infile = open('E:\\state.txt','r')    #读取文件
listname = [line.rstrip() for line in infile]   #用字典表示出来
listname.sort()    #进行排序
print(listname)     #得出结果










？？？？？？

一： 编写一段程序，由一个单词作为输入，然后计算单词中不同原因的数量：

    # word = input("enter a word: ")
    # word = word.upper()
    # vowels = "AEIOU"
    # vowelsFound = []
    # numVowels = 0
    # # print("#",vowelsFound)
    # for letter in word:
    #     if (letter in vowels) and (letter not in vowelsFound):
    #         numVowels += 1
    #         vowelsFound.append(letter)
    #         print(vowelsFound)
    # # print("number of vowels: ",numVowels)
    
    
二： 编写一段程序，要求用户输入一句话，然后将所有的字母r去掉
    sentence = input("enter a sentence: ")
    newSentence = ""
    for ch in sentence:
        if ch.upper() != 'R':
            newSentence += ch
    print(newSentence)
    
    
    
    
p119 t83：
    justices = ["scalia r","kennedy r","thomas r","finsburg d","beryer d","roberts r","alito r","sotomayor d","kagan d"]
    demappointtees = []
    repappointees = []
    for justice in justices:
        if justice[-1] =='d':
            demappointtees.append(justice[:-2])
        else:
            repappointees.append(justice[:-2])
    named = ','.join(demappointtees)
    namer = ','.join(repappointees)
    print("demappointtees: ",named)
    print("repappointees: ",namer)


***********：
    1、字典的读取  [-1]  [-2] 的运用
    2、join方法的使用 strVar = ",".join(L)
    3、插入的方法 append()
    
    
    
